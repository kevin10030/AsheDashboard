@using DeviceSM1.Models.Table;
@model List<Device>
@{
    ViewData["Title"] = "Location Map";
}

<div class="container-fluid content-wrapper mb-5">
    <div class="ml-lg-5 ml-sm-0">
        <div class="h3 d-flex justify-content-start ml-5  mt-5 ">
            Location
        </div>
    </div>
    @*<div class="row ml-lg-5 mt-3">
        <div class="col-sm ml-sm-3 ml-lg-5 mr-lg-5 " style="width:80%;">
            <div class="dropdown">
                <button class="btn btn-secondary btn-sm  head-dropdown shadow" type="button" id="dropdownMenuButton " data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Customer 
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width:100%">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <a class="dropdown-item" href="#">Something else here</a>
                </div>
            </div>
        </div>
        <div class="col-sm ml-sm-3 ml-lg-3 mr-lg-5" style="width:80%;">
            <div class="dropdown">
                <button class="btn btn-secondary btn-sm  head-dropdown shadow" type="button" id="dropdownMenuButton " data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Device
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width:100%">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <a class="dropdown-item" href="#">Something else here</a>
                </div>
            </div>
        </div>
        <div class="col-sm ml-sm-3 ml-lg-3 mr-lg-5" style="width:80%;">
            <div class="dropdown">
                <button class="btn btn-secondary btn-sm  head-dropdown shadow" type="button" id="dropdownMenuButton " data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Location
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width:100%">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <a class="dropdown-item" href="#">Something else here</a>
                </div>
            </div>
        </div>
        <div class="col-sm  ml-lg-3 mr-lg-5">
            <button type="submit" class="btn  btn-sm shadow search-btn">Search</button>
        </div>
    </div>*@

    <div class="row ml-0 ml-lg-5 mr-6 mt-5">
        <div class="col-md-12  ml-md-5 " style="border:2px solid #d6d6d6;">
            <div id="map-container" class="z-depth-1-half map-container" style="height: 500px">
                @*<iframe src="https://maps.google.com/maps?q=manhatan&t=&z=13&ie=UTF8&iwloc=&output=embed" frameborder="0"
                        style="border:0" allowfullscreen></iframe>*@
            </div>
        </div>
    </div>
</div>

@section Scripts {
  
    <script src="~/plugins/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/js/Location/index.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUKBHq7QEAIjV8xpERcEnnvi9y1iE0Bpc"></script>
    <script type="text/javascript">
        var global_markers = [];
        var infowindow = new google.maps.InfoWindow({});
        var markers = [];

        function initialize() {
            var mapOptions = {
                center: new google.maps.LatLng(37.595228, -122.052096),
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.HYBRID
            };
            var map = new google.maps.Map(document.getElementById("map-container"), mapOptions);

            @foreach (var Device in Model) {
                <text>try {
                    var valuesToPush = new Array();
                    valuesToPush[0] = "@Device.Location.Latitude";
                    valuesToPush[1] = "@Device.Location.Longitude";
                    valuesToPush[2] = "@Device.IMEI";
                    valuesToPush[3] = "@Device.Location.Name,@Device.Location.Country";
                    if (@Device.Logs.Count > 0)
                    {
                        valuesToPush[4] = @Device.Logs[Device.Logs.Count - 1].Speed;
                    } else
                    {
                       valuesToPush[4] = 0;
                    }
                    markers.push(valuesToPush);
                }catch (err) { }</text>
            }
            addMarker();

            function addMarker() {
                for (var i = 0; i < markers.length; i++) {
                    var lat = parseFloat(markers[i][0]);
                    var lng = parseFloat(markers[i][1]);
                    var imei = markers[i][2];
                    var name = markers[i][3];
                    var userSpeed = markers[i][4];
                    var myLatlng = new google.maps.LatLng(lat, lng);
                    var contentString = '<div class="infowindow"><p>' + imei + '<br/>' + name + '</p></div>';
                    if (userSpeed < 2.00) {
                        markerImage = "../images/stop/" + (i + 1) + ".png";
                    }
                    else {
                        markerImage = "../images/moving/" + (i + 1) + ".png";
                    }
                    var marker = new google.maps.Marker({
                        icon: markerImage,
                        position: myLatlng,
                        map: map,
                        title: "Coordinates: " + lat + " , " + lng + " \n Location: " + name
                    });
                    marker['infowindow'] = contentString;
                    global_markers[i] = marker;
                    google.maps.event.addListener(global_markers[i], 'click', function () {
                        infowindow.setContent(this['infowindow']);
                        infowindow.open(map, this);
                    });
                }
            }

        } google.maps.event.addDomListener(window, 'load', initialize);
    </script>
}

@section Styles {
    <style type="text/css">
        .infowindow {
            background-color: Yellow;
            text-align: left;
            padding: 0px, 0px, 0px, 0px;
            margin: 0px, 0px, 0px, 0px;
        }
    </style>
}